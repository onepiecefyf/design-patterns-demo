
前端


# 项目编码
app=data-security-management-front
#nginx 容器的端口
servicePort=80
# 对外端口。 找相关人员分配
nodePort=30166
# 服务的命名空间,根据部门来区分
namespace=dscp
# 发布到那个ingress, 目前有nginx，nginx-dev
ingressClass=nginx
#访问的上下文，可自定义，不指定默认使用app的的消息
ingressPath=data-security-management-front

/usr/local/ops/ops-docker/script/deploy.sh --src data-security-management-front --dockerTemplateDir nginx --port 80 --replicaCount 1 --serviceType=NodePort --nodePort 30166 --enableLogPersist --cmd "sh ./start.sh" --namespace dscp --enableExportIngress --ingressClass nginx --ingressPath data-security-management-front


后端

# 项目编码
app=data-security-management-front
#docker common/java
dockerTemplateDir=common
#nginx 容器的端口
servicePort=80
# 对外端口。 找相关人员分配
nodePort=32009
# 服务的命名空间,根据部门来区分
namespace=dzqz
# 发布到那个ingress, 目前有nginx，nginx-dev
ingressClass=nginx-dev
#访问的上下文，可自定义，不指定默认使用app的的消息
ingressPath=$app


/usr/local/ops/ops-docker/script/deploy.sh --src data-security-management-front --dockerTemplateDir  nginx  --port 80 --replicaCount 1 --serviceType=NodePort --nodePort 30166 --enableLogPersist --cmd "sh ./start.sh" --enableDataPersist --namespace dscp --enableExportIngress --ingressClass nginx --ingressPath data-security-management-front


